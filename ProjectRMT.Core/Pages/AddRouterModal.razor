@using System.Drawing;
@using MudBlazor;
@using Project_RMT.Models;
@using Router = Project_RMT.Models.Router;
@using System.Net;

<MudForm @ref="form">
    <MudDialog>
        <DialogContent>
            <MudGrid>
                <MudItem xs="12" md="6">
                    <MudTextField T="IPAddress" Label="IPadress" @ref="ipField" />
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField T="Point" Label="Coordinates" @ref="coordinateField" />
                </MudItem>
                <MudSelect T="NetworkInterface" Label="NetworkInterfaces" MultiSelection="true" @bind-SelectedValues="options">
                    @foreach (var networkInterface in NetworkInterfaces)
                    {
                        <MudSelectItem T="NetworkInterface" Value="@networkInterface">@networkInterface.Name</MudSelectItem>
                    }
                </MudSelect>
            </MudGrid>
            <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" Class="ml-auto">Register</MudButton>
        </DialogContent>
    </MudDialog>
</MudForm>


@code {
    [Parameter] public List<NetworkInterface> NetworkInterfaces { get; set; }
    MudTextField<IPAddress> ipField;
    MudTextField<Point> coordinateField;
    MudForm form;
    private IEnumerable<NetworkInterface> options { get; set; } = new HashSet<NetworkInterface>();

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }


    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void save()
    {
        var newRouter = new Router()
            {
                Id = 1,
                Clients = new List<Models.Client>(),
                IPAdress = ipField.Value,
                NetworkInterfaces = options.ToList(),
                RoutingTable = new(),
                Coordinates = coordinateField.Value
            };

        MudDialog.Close(DialogResult.Ok(newRouter));
    }
}